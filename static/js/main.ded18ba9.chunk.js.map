{"version":3,"sources":["SPSGame.jsx","App.js","reportWebVitals.js","index.js"],"names":["SPSGame","state","robonum","stone","paper","scissor","user","botscore","userscore","text","handlePaper","bind","handleStone","handleScissor","get","Math","floor","random","this","setState","handleBot","handleResult","bot","res","Fragment","className","style","alignContent","paddingLeft","paddingRight","display","float","onClick","href","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRA0IeA,E,kDAtIX,aAAc,IAAD,8BACT,gBAKJC,MAAQ,CACJC,QAAQ,KACRC,MAAM,eACNC,MAAM,eACNC,QAAQ,eACRC,KAAK,KACLC,SAAS,EACTC,UAAU,EACVC,KAAK,MAZL,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,cAAc,EAAKA,cAAcF,KAAnB,gBAJV,E,6CAgBb,WACI,IAAIG,EAAIC,KAAKC,MAAuB,EAAjBD,KAAKE,UAAgB,EAC/B,IAANH,EACCI,KAAKC,SAAS,CAACjB,QAAQgB,KAAKjB,MAAME,QAExB,IAANW,EACJI,KAAKC,SAAS,CAACjB,QAAQgB,KAAKjB,MAAMG,QAGlCc,KAAKC,SAAS,CAACjB,QAAQgB,KAAKjB,MAAMI,Y,yBAG1C,WAAc,IAAD,OACTa,KAAKE,YACLF,KAAKC,SAAS,CAACb,KAAK,iBAAO,WAEvB,EAAKe,oB,yBAIb,WAAc,IAAD,OACTH,KAAKE,YACLF,KAAKC,SAAS,CAACb,KAAK,iBAAO,WAEvB,EAAKe,oB,2BAIb,WAAgB,IAAD,OACXH,KAAKE,YACLF,KAAKC,SAAS,CAACb,KAAK,iBAAO,WAEvB,EAAKe,oB,0BAIb,WACI,IAAIC,EAAMJ,KAAKjB,MAAMC,QACjBI,EAAMY,KAAKjB,MAAMK,KAClBgB,IAAMhB,EACLY,KAAKC,SAAS,CAACI,IAAI,EAAEd,KAAK,eAEpBa,IAAMJ,KAAKjB,MAAME,OAASG,IAAOY,KAAKjB,MAAMI,SACjDiB,IAAMJ,KAAKjB,MAAMI,SAAWC,IAAOY,KAAKjB,MAAMG,OAC9CkB,IAAMJ,KAAKjB,MAAMG,OAASE,IAAOY,KAAKjB,MAAME,MACzCe,KAAKC,SAAS,CAACI,IAAI,EAAEd,KAAK,aAAaF,SAASW,KAAKjB,MAAMM,SAAS,IAGxEW,KAAKC,SAAS,CAACI,IAAI,EAAEd,KAAK,UAAUD,UAAUU,KAAKjB,MAAMO,UAAU,M,oBAI3E,WAEI,OACI,cAAC,IAAMgB,SAAP,UACI,sBAAKC,UAAU,SAAf,UACI,uBAAK,sDADT,IACuC,uBACnC,sBAAKA,UAAU,iBAAiBC,MAAO,CAACC,aAAa,SAASC,YAAY,MAAMC,aAAa,OAA7F,UACI,sBAAKJ,UAAU,WAAWC,MAAO,CAACC,aAAa,SAASG,QAAQ,SAASC,MAAM,SAA/E,UACI,8BACsB,OAArBb,KAAKjB,MAAMC,QAAgB,gBAAgB,KACtC,uBACN,qBAAKuB,UAAU,SAAf,SAC0B,OAArBP,KAAKjB,MAAMC,QAAgBgB,KAAKjB,MAAMC,QAAQ,QAGvD,sBAAKuB,UAAU,WAAWC,MAAO,CAACI,QAAQ,UAA1C,UACI,8BACuB,OAAlBZ,KAAKjB,MAAMK,KAAa,eAAe,KAE5C,uBACA,qBAAKmB,UAAU,SAAf,SACuB,OAAlBP,KAAKjB,MAAMK,KAAaY,KAAKjB,MAAMK,KAAK,WAKrD,oBAAGmB,UAA4B,IAAjBP,KAAKjB,MAAMsB,IAAQ,oBAAsC,IAAjBL,KAAKjB,MAAMsB,IAAQ,uBAAuB,sBAAhG,cAA0HL,KAAKjB,MAAMQ,KAAK,0BAE1I,uBACA,sBAAKgB,UAAU,iBAAiBC,MAAO,CAACC,aAAa,SAASC,YAAY,MAAMC,aAAa,OAA7F,UACI,sBAAKJ,UAAU,WAAWC,MAAO,CAACC,aAAa,SAASG,QAAQ,SAASC,MAAM,SAA/E,UAEI,qBAAKN,UAAU,SAAf,SAC0B,OAArBP,KAAKjB,MAAMC,QAAgBgB,KAAKjB,MAAMM,SAAS,KAC9C,uBACN,8BAC0B,OAArBW,KAAKjB,MAAMC,QAAgB,gBAAgB,QAIpD,sBAAKuB,UAAU,WAAWC,MAAO,CAACI,QAAQ,UAA1C,UACI,qBAAKL,UAAU,SAAf,SACuB,OAAlBP,KAAKjB,MAAMK,KAAaY,KAAKjB,MAAMO,UAAU,KAElD,uBACA,8BACuB,OAAlBU,KAAKjB,MAAMK,KAAa,cAAc,WAInD,uBACA,wBAAQmB,UAAU,WAAWO,QAASd,KAAKN,YAA3C,0BACA,wBAAQa,UAAU,WAAWO,QAASd,KAAKR,YAA3C,0BACA,wBAAQe,UAAU,WAAWO,QAASd,KAAKL,cAA3C,0BACA,uBACA,4BAAsB,OAAlBK,KAAKjB,MAAMK,KAAc,4CAA4C,KACzE,8BACuB,OAAlBY,KAAKjB,MAAMK,KAAc,yCAAyC,GAChD,OAAlBY,KAAKjB,MAAMK,KAAc,mBAAG2B,KAAK,oCAAR,gCAAmE,e,GA/H/FC,a,MCSPC,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCKSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ded18ba9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './../node_modules/bootstrap/dist/css/bootstrap.css';\n\nclass SPSGame extends Component {\n    constructor(){\n        super();\n        this.handlePaper = this.handlePaper.bind(this);\n        this.handleStone = this.handleStone.bind(this);\n        this.handleScissor=this.handleScissor.bind(this);\n    }\n    state = { \n        robonum:null,\n        stone:'üíé',\n        paper:'üì∞',\n        scissor:'‚úÇÔ∏è',\n        user:null,\n        botscore:0,\n        userscore:0,\n        text:null\n    }\n    handleBot(){\n        var get=Math.floor(Math.random() * (3))+1;\n        if(get===1){\n            this.setState({robonum:this.state.stone});    \n        }\n        else if(get===2){\n            this.setState({robonum:this.state.paper});    \n        }\n        else{\n            this.setState({robonum:this.state.scissor});\n        }\n    }\n    handleStone(){\n        this.handleBot();\n        this.setState({user:'üíé'}, () => {                              \n            //callback\n            this.handleResult();\n          });\n    }\n\n    handlePaper(){\n        this.handleBot();\n        this.setState({user:'üì∞'}, () => {                              \n            //callback\n            this.handleResult();\n          });        \n    }\n\n    handleScissor(){\n        this.handleBot();\n        this.setState({user:'‚úÇÔ∏è'}, () => {                              \n            //callback\n            this.handleResult();\n          });\n    }\n\n    handleResult(){\n        var bot = this.state.robonum;\n        var user= this.state.user;\n        if(bot===user){\n            this.setState({res:1,text:\"It's a tie\"});\n        }\n        else if( (bot===this.state.stone && user===this.state.scissor) ||\n            (bot===this.state.scissor && user===this.state.paper) || \n            (bot===this.state.paper && user===this.state.stone)){\n                this.setState({res:0,text:\"Robot Wins\",botscore:this.state.botscore+1});\n            }\n        else{\n            this.setState({res:2,text:\"You Win\",userscore:this.state.userscore+1});\n        }\n    }\n\n    render() { \n        \n        return ( \n            <React.Fragment>\n                <div className=\"stripe\">\n                    <br/><h1>Stone Paper Scissors</h1> <br/>\n                    <div className=\" col-sm-12 row\" style={{alignContent:'center',paddingLeft:'20%',paddingRight:'20%'}}>\n                        <div className=\"col-sm-6\" style={{alignContent:'center',display:\"inline\",float:'right'}}>\n                            <div>\n                            {this.state.robonum!==null? \"Robot pressed\":\"\"}\n                            </div><br/>\n                            <div className=\"choice\">\n                                {this.state.robonum!==null? this.state.robonum:\"\"}\n                            </div>                            \n                        </div>\n                        <div className=\"col-sm-6\" style={{display:\"inline\"}}>\n                            <div>\n                                {this.state.user!==null? \"You pressed \":\"\"}\n                            </div>\n                            <br/>\n                            <div className=\"choice\">\n                                {this.state.user!==null? this.state.user:\"\"}\n                            </div>                            \n                            \n                        </div>\n                    </div>\n                    <p className={this.state.res===0?\"spsresult redText\":(this.state.res===1?\"spsresult yellowText\":\"spsresult greenText\")}> {this.state.text}<br/>\n                    </p>\n                    <br/>\n                    <div className=\" col-sm-12 row\" style={{alignContent:'center',paddingLeft:'20%',paddingRight:'20%'}}>\n                        <div className=\"col-sm-6\" style={{alignContent:'center',display:\"inline\",float:'right'}}>\n                            \n                            <div className=\"choice\">\n                                {this.state.robonum!==null? this.state.botscore:\"\"}\n                            </div><br/>\n                            <div>\n                                {this.state.robonum!==null? \"Robot's Score\":\"\"}\n                            </div>\n\n                        </div>\n                        <div className=\"col-sm-6\" style={{display:\"inline\"}}>                            \n                            <div className=\"choice\">\n                                {this.state.user!==null? this.state.userscore:\"\"}\n                            </div>\n                            <br/>                            \n                            <div>\n                                {this.state.user!==null? \"Your Score \":\"\"}\n                            </div>\n                        </div>\n                    </div>\n                    <br/>\n                    <button className=\"roundbtn\" onClick={this.handleStone}>üíé</button>\n                    <button className=\"roundbtn\" onClick={this.handlePaper}>üì∞</button>\n                    <button className=\"roundbtn\" onClick={this.handleScissor}>‚úÇÔ∏è</button>\n                    <br/>\n                    <i>{this.state.user===null ? \"Choose a stone, paper or scissor to play.\":\"\"}</i>\n                    <i>\n                        {this.state.user!==null ? \"If you liked this game, checkout more \":\"\"} \n                        {this.state.user!==null ? <a href=\"https://devsagarkhatri.github.io/\">at my website here</a>:\"\"}\n                    </i>\n                </div >\n            </React.Fragment>\n         );\n    }\n}\n \nexport default SPSGame;","import SPSGame from './SPSGame.jsx';\nimport './../node_modules/bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SPSGame/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}