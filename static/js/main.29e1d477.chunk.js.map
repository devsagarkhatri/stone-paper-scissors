{"version":3,"sources":["SPSGame.jsx","App.js","reportWebVitals.js","index.js"],"names":["SPSGame","state","robonum","stone","paper","scissor","user","res","handlePaper","bind","handleStone","handleScissor","get","Math","floor","random","this","setState","handleBot","Fragment","className","style","alignContent","paddingLeft","paddingRight","display","float","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAiFeA,E,kDA7EX,aAAc,IAAD,8BACT,gBAKJC,MAAQ,CACJC,QAAQ,KACRC,MAAM,eACNC,MAAM,eACNC,QAAQ,eACRC,KAAK,KACLC,IAAI,MAVJ,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,cAAc,EAAKA,cAAcF,KAAnB,gBAJV,E,6CAcb,WACI,IAAIG,EAAIC,KAAKC,MAAuB,EAAjBD,KAAKE,UAAgB,EAC/B,IAANH,EACCI,KAAKC,SAAS,CAACf,QAAQc,KAAKf,MAAME,QAExB,IAANS,EACJI,KAAKC,SAAS,CAACf,QAAQc,KAAKf,MAAMG,QAGlCY,KAAKC,SAAS,CAACf,QAAQc,KAAKf,MAAMI,Y,yBAG1C,WACIW,KAAKE,YACLF,KAAKC,SAAS,CAACX,KAAK,mB,yBAExB,WACIU,KAAKE,YACLF,KAAKC,SAAS,CAACX,KAAK,mB,2BAExB,WACIU,KAAKE,YACLF,KAAKC,SAAS,CAACX,KAAK,mB,oBAGxB,WACI,OACI,cAAC,IAAMa,SAAP,UACI,sBAAKC,UAAU,SAAf,UACI,uBAAK,sDADT,IACuC,uBACnC,qBAAKA,UAAU,iBAAiBC,MAAO,CAACC,aAAa,SAASC,YAAY,MAAMC,aAAa,OAA7F,SACI,sBAAKJ,UAAU,YAAYC,MAAO,CAACC,aAAa,SAASG,QAAQ,SAASC,MAAM,SAAhF,UACI,8BACsB,OAArBV,KAAKf,MAAMC,QAAgB,gBAAgB,KACtC,uBACN,qBAAKkB,UAAU,SAAf,SAC0B,OAArBJ,KAAKf,MAAMC,QAAgBc,KAAKf,MAAMC,QAAQ,UAc3D,oBAAGkB,UAAU,YAAb,cAA0B,0BAE1B,uBACA,wBAAQA,UAAU,WAAWO,QAASX,KAAKN,YAA3C,0BACA,wBAAQU,UAAU,WAAWO,QAASX,KAAKR,YAA3C,0BACA,wBAAQY,UAAU,WAAWO,QAASX,KAAKL,cAA3C,mC,GAtEEiB,a,MCSPC,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCKSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.29e1d477.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './../node_modules/bootstrap/dist/css/bootstrap.css';\n\nclass SPSGame extends Component {\n    constructor(){\n        super();\n        this.handlePaper = this.handlePaper.bind(this);\n        this.handleStone = this.handleStone.bind(this);\n        this.handleScissor=this.handleScissor.bind(this);\n    }\n    state = { \n        robonum:null,\n        stone:'üíé',\n        paper:'üì∞',\n        scissor:'‚úÇÔ∏è',\n        user:null,\n        res:null\n    }\n    handleBot(){\n        var get=Math.floor(Math.random() * (3))+1;\n        if(get===1){\n            this.setState({robonum:this.state.stone});    \n        }\n        else if(get===2){\n            this.setState({robonum:this.state.paper});    \n        }\n        else{\n            this.setState({robonum:this.state.scissor});\n        }\n    }\n    handleStone(){\n        this.handleBot();\n        this.setState({user:'üíé'});\n    }\n    handlePaper(){\n        this.handleBot();\n        this.setState({user:'üì∞'});\n    }\n    handleScissor(){\n        this.handleBot();\n        this.setState({user:'‚úÇÔ∏è'});\n    }\n\n    render() { \n        return ( \n            <React.Fragment>\n                <div className=\"stripe\">\n                    <br/><h1>Stone Paper Scissors</h1> <br/>\n                    <div className=\" col-sm-12 row\" style={{alignContent:'center',paddingLeft:'20%',paddingRight:'20%'}}>\n                        <div className=\"col-sm-12\" style={{alignContent:'center',display:\"inline\",float:'right'}}>\n                            <div>\n                            {this.state.robonum!==null? \"Robot pressed\":\"\"}\n                            </div><br/>\n                            <div className=\"choice\">\n                                {this.state.robonum!==null? this.state.robonum:\"\"}\n                            </div>                            \n                        </div>\n                        {/* <div className=\"col-sm-6\" style={{display:\"inline\"}}>\n                            <div>\n                                {this.state.user!==null? \"You pressed \":\"\"}\n                            </div>\n                            <br/>\n                            <div className=\"choice\">\n                                {this.state.user!==null? this.state.user:\"\"}\n                            </div>                            \n                            \n                        </div> */}\n                    </div>\n                    <p className=\"spsresult\"> <br/>\n                    </p>\n                    <br/>\n                    <button className=\"roundbtn\" onClick={this.handleStone}>üíé</button>\n                    <button className=\"roundbtn\" onClick={this.handlePaper}>üì∞</button>\n                    <button className=\"roundbtn\" onClick={this.handleScissor}>‚úÇÔ∏è</button>\n                    \n                </div >\n            </React.Fragment>\n         );\n    }\n}\n \nexport default SPSGame;","import SPSGame from './SPSGame.jsx';\nimport './../node_modules/bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SPSGame/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}